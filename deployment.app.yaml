apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: default # {"$ref":"#/definitions/io.k8s.cli.setters.namespace"}
  labels:
    app: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      securityContext:
        runAsUser: 82
        runAsGroup: 82
        fsGroup: 82
      containers:
      - name: nginx
        image: "nginx:1.17.10" # {"$ref":"#/definitions/io.k8s.cli.setters.nginx_image"}
        securityContext:
          runAsUser: 0
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        volumeMounts:
        - name: code
          mountPath: /app
          subPath: html
        - name: config-files
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.default.conf
      - name: fpm
        image: 'image' # {"$ref":"#/definitions/io.k8s.cli.setters.oro_code_image"}
        # image: aroq/php-fpm-oro:7.3.17.10 # {"$ref":"#/definitions/io.k8s.cli.setters.fpm_image"}
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 1
            memory: 4096Mi
          requests:
            cpu: 0.25
            memory: 512Mi
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: code
          mountPath: /app
          subPath: html
        - name: data-var
          mountPath: /data-var
        - name: config-files
          mountPath: /app/config/parameters.configmap.yml
          subPath: parameters.configmap.yml
        - name: config-files
          mountPath: /usr/local/etc/php/conf.d/default.ini
          subPath: php.ini
        env:
        - name: ASSETS_VERSION
          valueFrom:
            configMapKeyRef:
              key: assets_version
              name: oro-config
              # - name: DATABASE_HOST
              # valueFrom:
              # configMapKeyRef:
              # key: database_host
              # name: oro-config
              # - name: DATABASE_USER
              # valueFrom:
              # configMapKeyRef:
              # key: database_user
              # name: oro-config
              # - name: DATABASE_NAME
              # valueFrom:
              # configMapKeyRef:
              # key: database_name
              # name: oro-config
              # - name: DATABASE_DRIVER
              # valueFrom:
              # configMapKeyRef:
              # key: database_driver
              # name: oro-config
              # - name: DATABASE_PORT
              # valueFrom:
              # configMapKeyRef:
              # key: database_port
              # name: oro-config
              # - name: DATABASE_PASSWORD
              # valueFrom:
              # configMapKeyRef:
              # key: database_password
              # name: oro-config
              # - name: SESSION_HANDLER
              # valueFrom:
              # configMapKeyRef:
              # key: session_handler
              # name: oro-config
              # - name: REDIS_DSN_SESSION
              # valueFrom:
              # configMapKeyRef:
              # key: redis_dsn_session
              # name: oro-config
              # - name: REDIS_DSN_CACHE
              # valueFrom:
              # configMapKeyRef:
              # key: redis_dsn_cache
              # name: oro-config
              # - name: REDIS_DSN_DOCTRINE
              # valueFrom:
              # configMapKeyRef:
              # key: redis_dsn_doctrine
              # name: oro-config
      initContainers:
      - name: copy-code
        image: 'image' # {"$ref":"#/definitions/io.k8s.cli.setters.oro_code_image"}
        imagePullPolicy: Always
        command:
        - sh
        - "-c"
        - |
          set -x
          set -euo pipefail

          rm -fR /app/var/attachment
          rm -fR /app/var/cache
          rm -fR /app/var/logs
          rm -fR /app/var/import_export
          rm -fR /app/var/sessions

          ln -nfs /data-var/attachment /app/var/attachment
          ln -nfs /data-var/cache /app/var/cache
          ln -nfs /data-var/logs /app/var/logs
          ln -nfs /data-var/import_export /app/var/import_export
          ln -nfs /data-var/sessions /app/var/sessions

          ls -al /data-var

          mkdir -p /data-var/config
          if [ ! -f /data-var/config/parameters.yml ]; then
            cp -f /app/config/parameters.writeable.yml /data-var/config/parameters.yml
          fi
          ln -nfs /data-var/config/parameters.yml /app/config/parameters.yml

          cp -fR /app /srv/html

          chown -R 82:82 /srv/html
        volumeMounts:
        - name: code
          mountPath: /srv
        - name: data-var
          mountPath: /data-var
      - name: oro-install
        image: 'image' # {"$ref":"#/definitions/io.k8s.cli.setters.oro_code_image"}
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 1
            memory: 2048Mi
          requests:
            cpu: 0.5
            memory: 1024Mi
        command:
        - sh
        - "-c"
        - |
          set -x
          set -euo pipefail

          rm -fR /app/var/attachment
          rm -fR /app/var/cache
          rm -fR /app/var/logs
          rm -fR /app/var/import_export
          rm -fR /app/var/sessions

          ln -nfs /data-var/attachment /app/var/attachment
          ln -nfs /data-var/cache /app/var/cache
          ln -nfs /data-var/logs /app/var/logs
          ln -nfs /data-var/import_export /app/var/import_export
          ln -nfs /data-var/sessions /app/var/sessions
          ln -nfs /data-var/config/parameters.yml /app/config/parameters.yml

          # Check if the app is already installed:
          if cat /app/config/parameters.yml | grep 'installed: false'; then
            # Install app
            mkdir -p /data-var/attachment
            mkdir -p /data-var/cache
            mkdir -p /data-var/logs
            mkdir -p /data-var/import_export
            mkdir -p /data-var/sessions

            rm -fR /data-var/cache/*

            php -d memory_limit=-1 -dxcache.cacher=0 bin/console -vvv oro:install \
              --timeout=30000 \
              --force-debug \
              --skip-assets \
              --skip-translations \
              --skip-download-translations \
              --env=prod \
              --drop-database \
              --no-interaction \
              --language=en \
              --formatting-code=en \
              --application-url=${ORO_APP_URL} \
              --user-email=${ORO_USER_EMAIL} \
              --user-firstname=${ORO_USER_FIRSTNAME} \
              --user-lastname=${ORO_USER_LASTNAME} \
              --user-password=${ORO_USER_PASSWORD}
          else
            # Update app
            php -d memory_limit=-1 bin/console -vvv oro:platform:update \
              --timeout=30000 \
              --force \
              --force-debug \
              --no-interaction \
              --skip-assets \
              --skip-search-reindexation \
              --skip-translations \
              --skip-download-translations \
              --schedule-search-reindexation \
              --env=prod
          fi
        env:
        - name: ASSETS_VERSION
          valueFrom:
            configMapKeyRef:
              key: assets_version
              name: oro-config
        - name: ORO_APP_URL
          valueFrom:
            configMapKeyRef:
              key: oro_app_url
              name: oro-config
        - name: ORO_USER_EMAIL
          valueFrom:
            configMapKeyRef:
              key: user_email
              name: oro-install-parameters
        - name: ORO_USER_FIRSTNAME
          valueFrom:
            configMapKeyRef:
              key: user_firstname
              name: oro-install-parameters
        - name: ORO_USER_LASTNAME
          valueFrom:
            configMapKeyRef:
              key: user_lastname
              name: oro-install-parameters
        - name: ORO_USER_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: user_password
              name: oro-install-parameters
        volumeMounts:
        - name: code
          mountPath: /app
          subPath: html
        - name: data-var
          mountPath: /data-var
        - name: config-files
          mountPath: /app/config/parameters.configmap.yml
          subPath: parameters.configmap.yml
        - name: config-files
          mountPath: /usr/local/etc/php/conf.d/default.ini
          subPath: php.ini
      volumes:
      - name: code
        emptyDir: {}
      - name: data-var
        persistentVolumeClaim:
          claimName: data-var
      - name: config-files
        configMap:
          name: config-files
      - name: oro-install-parameters
        configMap:
          name: oro-install-parameters
      - name: oro-config
        configMap:
          name: oro-config
