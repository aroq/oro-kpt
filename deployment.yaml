apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  labels:
    app: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: nginx
        image: nginx:1.17.10 # {"$ref":"#/definitions/io.k8s.cli.setters.nginx_image"}
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        volumeMounts:
        - name: code
          mountPath: /app
          subPath: html
        - name: oro-parameters-files
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.default.conf
      - name: fpm
        image: aroq/php-fpm-oro:7.3.17.5 # {"$ref":"#/definitions/io.k8s.cli.setters.fpm_image"}
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 1
            memory: 4096Mi
          requests:
            cpu: 0.25
            memory: 512Mi
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: code
          mountPath: /app
          subPath: html
        - name: data-var
          mountPath: /data-var
        - name: oro-parameters-files
          mountPath: /app/config/parameters.configmap.yml
          subPath: parameters.configmap.yml
        - name: oro-parameters-files
          mountPath: /usr/local/etc/php/conf.d/default.ini
          subPath: php.ini
      initContainers:
      - name: copy-code
        image: '' # {"$ref":"#/definitions/io.k8s.cli.setters.code_image"}
        imagePullPolicy: Always
        command:
          - sh
          - "-c"
          - |
              set -x
              set -euo pipefail

              rm -fR /app/var/attachment
              rm -fR /app/var/cache
              rm -fR /app/var/logs
              rm -fR /app/var/import_export
              rm -fR /app/var/sessions

              ln -nfs /data-var/attachment /app/var/attachment
              ln -nfs /data-var/cache /app/var/cache
              ln -nfs /data-var/logs /app/var/logs
              ln -nfs /data-var/import_export /app/var/import_export
              ln -nfs /data-var/sessions /app/var/sessions

              mkdir -p /data-var/config
              if [ ! -f /data-var/config/parameters.yml ]; then
                cp /app/config/parameters.writeable.yml /data-var/config/parameters.yml
              fi
              ln -nfs /data-var/config/parameters.yml /app/config/parameters.yml

              cp -fR /app /srv/html

              # 82:82 corresponds to www-data:www-data in 'php-fpm' based containers
              chown -R 82:82 /data-var
              chown -R 82:82 /srv/html

        volumeMounts:
        - name: code
          mountPath: /srv
        - name: data-var
          mountPath: /data-var
      - name: oro-install
        image: aroq/php-fpm-oro:7.3.17.7 # {"$ref":"#/definitions/io.k8s.cli.setters.install_image"}
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 1
            memory: 2048Mi
          requests:
            cpu: 0.25
            memory: 1024Mi
        command:
          - sh
          - "-c"
          - |
              set -x
              set -euo pipefail

              rm -fR /app/var/attachment
              rm -fR /app/var/cache
              rm -fR /app/var/logs
              rm -fR /app/var/import_export
              rm -fR /app/var/sessions

              ln -nfs /data-var/attachment /app/var/attachment
              ln -nfs /data-var/cache /app/var/cache
              ln -nfs /data-var/logs /app/var/logs
              ln -nfs /data-var/import_export /app/var/import_export
              ln -nfs /data-var/sessions /app/var/sessions
              ln -nfs /data-var/config/parameters.yml /app/config/parameters.yml

              # Halt the current script execution if the app is already installed:
              cat /app/config/parameters.yml | grep 'installed: false' || exit 0;

              mkdir -p /data-var/attachment
              mkdir -p /data-var/cache
              mkdir -p /data-var/logs
              mkdir -p /data-var/import_export
              mkdir -p /data-var/sessions

              rm -fR /data-var/cache/*
              php -d memory_limit=-1 -dxcache.cacher=0 bin/console -vvv oro:install \
                --timeout=30000 \
                --force-debug \
                --skip-assets \
                --skip-translations \
                --skip-download-translations \
                --env=prod \
                --drop-database \
                --no-interaction \
                --language=en \
                --formatting-code=en \
                --application-url=$(ORO_APP_URL) \
                --user-email=$(ORO_USER_EMAIL) \
                --user-firstname=$(ORO_USER_FIRSTNAME) \
                --user-lastname=$(ORO_USER_LASTNAME) \
                --user-password$=(ORO_USER_PASSWORD)

                # oro:assets:install divided into subcommands;
                php -d memory_limit=-1 bin/console -vvv fos:js-routing:dump \
                  --env=prod

                php -d memory_limit=-1 bin/console -vvv oro:localization:dump \
                  --env=prod

                php -d memory_limit=-1 bin/console -vvv assets:install \
                  --symlink \
                  --env=prod

                php -d memory_limit=-1 bin/console -vvv oro:assets:build \
                  --npm-install \
                  --no-interaction \
                  --env=prod

                php -d memory_limit=-1 bin/console -vvv cache-clear --env=prod

        env:
        - name: ORO_APP_URL
          valueFrom:
            configMapKeyRef:
              key: app-url
              name: oro-parameters
        - name: ORO_USER_EMAIL
          valueFrom:
            configMapKeyRef:
              key: user-email
              name: oro-parameters
        - name: ORO_USER_FIRSTNAME
          valueFrom:
            configMapKeyRef:
              key: user-firstname
              name: oro-parameters
        - name: ORO_USER_LASTNAME
          valueFrom:
            configMapKeyRef:
              key: user-lastname
              name: oro-parameters
        - name: ORO_USER_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: user-password
              name: oro-parameters

        volumeMounts:
        - name: code
          mountPath: /app
          subPath: html
        - name: data-var
          mountPath: /data-var
        - name: oro-parameters-files
          mountPath: /app/config/parameters.configmap.yml
          subPath: parameters.configmap.yml
        - name: oro-parameters-files
          mountPath: /usr/local/etc/php/conf.d/default.ini
          subPath: php.ini

      volumes:
        - name: code
          emptyDir: {}
        - name: data-var
          persistentVolumeClaim:
            claimName: data-var
        - name: oro-parameters-files
          configMap:
            name: oro-parameters-files
